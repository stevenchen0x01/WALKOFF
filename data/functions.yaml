walkoff: '0.1'
info:
  version: 1.0.0
  title: Global Flags and Filters
  description: Flags and filters available to all apps
  contact:
    name: Walkoff Team
  license:
    name: Creative Commons
flags:
  regMatch:
    run: regMatch.regMatch
    description: Matches an input against a regular expression
    dataIn: value
    parameters:
      - name: value
        description: The input value
        required: true
        type: string
      - name: regex
        description: The regular expression to match
        required: true
        type: string
  count:
    run: count.count
    description: Compares two numbers
    dataIn: value
    parameters:
        - name: value
          description: The input value
          required: true
          type: number
        - name: operator
          description: The comparison operator ('g', 'ge', etc.)
          required: true
          type: string
          enum: [g, ge, l, le, e]
          default: e
        - name: threshold
          description: The value with which to compare the input
          required: true
          type: number
filters:
  length:
    run: length.length
    description: Returns the length of a collection
    dataIn: value
    parameters:
      - name: value
        description: The input collection
        required: true
        type: string
    returns:
      Success:
        description: The length of the collection
        schema:
          type: object
  'json select':
    run: selection.json_select
    dataIn: json_in
    description: Gets a selected sub element of a json from the output of a step
    parameters:
        - name: json_in
          description: The json object to select from
          required: true
          type: string
        - name: element
          description: The element of the JSON to select
          required: true
          type: string
    returns:
      Success:
        schema:
          type: object
  'list select':
    run: selection.list_select
    dataIn: list_in
    description: Gets an element from a list
    parameters:
        - name: list_in
          description: The reference to the step to get the list from which to select the element
          required: true
          type: array
        - name: index
          description: The index of the element
          required: True
          type: integer
    returns:
      Success:
        schema:
          type: object
  'linearly scale':
    run: math.linear_scale
    dataIn: value
    description: Linearly scales a value which is limited to some min and max value to a number between a low and high value
    parameters:
        - name: value
          description: The value to scale
          required: true
          type: number
        - name: min_value
          description: The minimum value of the input (if value less than this, this value acts as a cutoff)
          required: true
          type: number
        - name: max_value
          description: The maximum value of the input (if value less than this, this value acts as a cutoff)
          required: true
          type: number
        - name: low_scale
          description: The lowest possible output value
          required: true
          type: number
          default: 0.0
        - name: high_scale
          description: The highest possible output value
          required: true
          type: number
          default: 1.0
    returns:
      Success:
        schema:
          type: number
  'divide':
    run: math.divide
    dataIn: value
    description: Divides a number
    parameters:
        - name: value
          description: The value to divide
          required: true
          type: number
        - name: divisor
          description: The number to divide the input by
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
  'multiply':
    run: math.multiply
    dataIn: value
    description: Multiplies a number
    parameters:
        - name: value
          description: The value to multiply
          required: true
          type: number
        - name: multiplier
          description: The number to multiply the input by
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
  'add':
    run: math.add
    dataIn: num1
    description: Adds two numbers
    parameters:
        - name: num1
          description: The first number
          required: true
          type: number
        - name: num2
          description: The second number
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
  'subtract':
    run: math.subtract
    dataIn: value
    description: Subtracts a number from another number
    parameters:
        - name: value
          description: The starting value
          required: true
          type: number
        - name: subtractor
          description: The number to subtract from the input value
          required: true
          type: number
    returns:
      Success:
        schema:
          type: number
