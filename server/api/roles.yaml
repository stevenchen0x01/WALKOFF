/api/roles:
  get:
    tags:
      - Roles
    summary: Read all roles
    description: ''
    operationId: server.endpoints.roles.read_all_roles
    produces:
      - application/json
    responses:
      '200':
        description: Success
        schema:
          description: A list of roles
          type: array
          items:
            $ref: '#/definitions/Role'
  put:
    tags:
      - Roles
    summary: Create a role
    description: ''
    operationId: server.endpoints.roles.create_role
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The role object to be created
        required: true
        schema:
          $ref: '#/definitions/Role'
    responses:
      201:
        description: Object created.
      462:
        description: Object exists.
  post:
    tags:
      - Roles
    summary: Update a role
    description: ''
    operationId: server.endpoints.roles.update_role
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: Updated fields for the role object
        required: true
        schema:
          $ref: '#/definitions/Role'
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Role'
      461:
        description: Object does not exist.
/api/roles/{role_name}:
  parameters:
    - name: role_name
      in: path
      description: The name that needs to be fetched.
      required: true
      type: string
  get:
    tags:
      - Roles
    summary: Read a role
    description: ''
    operationId: server.endpoints.roles.read_role
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Role'
      461:
        description: Object does not exist.
#  delete:
#    tags:
#      - Roles
#    summary: Delete a role
#    description: ''
#    operationId: server.endpoints.roles.delete_role
#    produces:
#      - application/json
#    responses:
#      200:
#        description: Success
#        schema:
#          $ref: '#/definitions/Role'
#      461:
#        description: Object does not exist.
