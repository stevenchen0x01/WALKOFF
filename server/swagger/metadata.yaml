/availablesubscriptions:
  get:
    tags:
      - System
    summary: Read all available subscription options
    description: ''
    operationId: server.endpoints.metadata.read_all_possible_subscriptions
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          properties:
            controller:
              description: All events related to the controller
              type: array
              items:
                type: string
            playbook:
              description: All events related to playooks
              type: array
              items:
                type: string
            workflow:
              description: All events related to workflows
              type: array
              items:
                type: string
            step:
              description: All events related to steps
              type: array
              items:
                type: string
            nextstep:
              description: All events related to next step objects
              type: array
              items:
                type: string
            flag:
              description: All events related to flags
              type: array
              items:
                type: string
            filter:
              description: All events related to filters
              type: array
              items:
                type: string
/filters:
  get:
    tags:
      - System
    summary: Read all filters
    description: ''
    operationId: server.endpoints.metadata.read_all_filters
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [filters]
          properties:
            filters:
              description: All the available filters. Form of '{filter_name -> Action}'
              type: object

/flags:
  get:
    tags:
      - System
    summary: Read all flags
    description: ''
    operationId: server.endpoints.metadata.read_all_flags
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [flags]
          properties:
            filters:
              description: All the available flags. Form of '{flag_name -> Action}'
              type: object

/interface/{interface_name}:
  post:
    tags:
      - System
    summary: Render interface
    description: ''
    operationId: server.endpoints.metadata.sys_pages
    produces:
      - application/json
    parameters:
      - name: interface_name
        in: path
        description: The name that needs to be fetched.
        required: true
        type: string
      - in: body
        name: widget_args
        description: Pass page and arguments to render widget.
        required: false
        schema:
          $ref: '#/definitions/RenderArgs'
    responses:
      200:
        description: Success

/key:
  get:
    tags:
      - System
    summary: Read api key
    description: ''
    operationId: server.endpoints.metadata.login_info
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [auth_token]
          properties:
            auth_token:
              description: API Authentication Token
              type: string

/widgets:
  get:
    tags:
      - System
    summary: Read all widgets
    description: ''
    operationId: server.endpoints.metadata.read_all_widgets
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          description: All the wigdets for all apps. Form of '{app_name -> [widget_name]}'

/client/{filename}:
  get:
    tags:
      - Client
    summary: Get a client file
    description: ''
    operationId: server.endpoints.metadata.read_client_file
    produces:
      - application/json
    parameters:
      - name: filename
        in: path
        description: The name of the file to fetch
        required: true
        type: string
    responses:
      200:
        description: Success
      463:
        description: Invalid filename