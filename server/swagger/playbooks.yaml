/playbooks:
  get:
    tags:
      - Playbooks
    summary: Read all playbooks
    description: ''
    operationId: server.endpoints.playbooks.get_playbooks
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [playbooks]
          properties:
            playbooks:
              type: object
              description: All workflows and their associated playbooks. Form of '{playbook_name -> [workflow_name]}'
/playbooks/{playbook_name}:
  parameters:
    - name: playbook_name
      in: path
      description: The name that needs to be fetched.
      required: true
      type: string
  put:
    tags:
      - Playbooks
    summary: Create a playbook
    description: ''
    operationId: server.endpoints.playbooks.create_playbook
    consumes:
      - mutlipart/form-data
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The playbook object to be created
        required: true
        schema:
          $ref: '#/definitions/Playbook'
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [playbooks]
          properties:
            playbooks:
              type: object
              description: All workflows and their associated playbooks. Form of '{playbook_name -> [workflow_name]}'
  get:
    tags:
      - Playbooks
    summary: Read a playbook
    description: ''
    operationId: server.endpoints.playbooks.read_playbook
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [workflows]
          properties:
            workflows:
              description: All workflows and their associated playbooks. Form of '{playbook_name -> [workflow_name]}'
              type: object
  post:
    tags:
      - Playbooks
    summary: Update a playbook
    description: ''
    operationId: server.endpoints.playbooks.update_playbook
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: Fields of the playbook object to be updated
        required: true
        schema:
          $ref: '#/definitions/Playbook'
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [workflows]
          properties:
            workflows:
              description: All workflows and their associated playbooks. Form of '{playbook_name -> [workflow_name]}'
              type: object
  delete:
    tags:
      - Playbooks
    summary: Delete a playbook
    description: ''
    operationId: server.endpoints.playbooks.delete_playbook
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [workflows]
          properties:
            workflows:
              description: All workflows and their associated playbooks. Form of '{playbook_name -> [workflow_name]}'
              type: object
/playbooks/{playbook_name}/copy:
  post:
    tags:
      - Playbooks
    summary: Copy a playbook
    description: ''
    operationId: server.endpoints.playbooks.copy_playbook
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - in: body
        name: body
        description: Playbook name
        required: true
        schema:
          $ref: '#/definitions/Playbook'
    consumes:
      - multipart/form-data
    produces:
      - application/json
    responses:
      200:
        description: Success
/playbooks/{playbook_name}/workflows:
  get:
    tags:
      - Playbooks
    summary: Read all workflows in playbook
    description: ''
    operationId: server.endpoints.playbooks.get_workflows
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [workflows]
          properties:
            workflows:
              description: All the workflows
              type: array
              items:
                type: string
              example: [workflow_1, HelloWorldWorkflow, ThatOneWorkfow]
/playbooks/{playbook_name}/workflows/{workflow_name}:
  parameters:
  - name: playbook_name
    in: path
    description: The name that needs to be fetched.
    required: true
    type: string
  - name: workflow_name
    in: path
    description: 'The name that needs to be fetched. '
    required: true
    type: string
  put:
    tags:
      - Workflows
    summary: Create a workflow
    description: ''
    operationId: server.endpoints.playbooks.create_workflow
    consumes:
      - multipart/form-data
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The workflow object to be created
        required: true
        schema:
          $ref: '#/definitions/AddWorkflow'
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [workflow]
          properties:
            workflow:
              $ref: '#/definitions/Workflow'
  get:
    tags:
      - Workflows
    summary: Read a workflow
    description: ''
    operationId: server.endpoints.playbooks.read_workflow
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          $ref: '#/definitions/Workflow'
  post:
    tags:
      - Workflows
    summary: Update a workflow
    description: ''
    operationId: server.endpoints.playbooks.update_workflow
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: The fields of the workflow object to be updated
        required: true
        schema:
          $ref: '#/definitions/WorkflowUpdate'
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [workflow]
          properties:
            workflow:
              $ref: '#/definitions/Workflow'
  delete:
    tags:
      - Workflows
    summary: Delete a workflow
    description: ''
    operationId: server.endpoints.playbooks.delete_workflow
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [playbooks]
          properties:
            playbooks:
              description: All workflows and their associated playbooks. Form of '{playbook_name -> [workflow_name]}'
              type: object
/playbooks/{playbook_name}/workflows/{workflow_name}/risk:
  get:
    tags:
      - Workflows
    summary: Read a workflow's risk value
    description: ''
    operationId: server.endpoints.playbooks.read_workflow_risk
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - name: workflow_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          type: object
          required: [risk_percent, risk_number]
          properties:
            risk_percent:
              description: Percentage of total risk accumulated
              type: number
              example: 25.63
            risk_number:
              description: Raw number of the risk accumulated by the workflow
              type: number
              example: 153.5
/playbooks/{playbook_name}/workflows/{workflow_name}/copy:
  post:
    tags:
      - Workflows
    summary: Copy a workflow
    description: ''
    operationId: server.endpoints.playbooks.copy_workflow
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - name: workflow_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - in: body
        name: body
        description: The new playbook and/or workflow name
        required: true
        schema:
          $ref: '#/definitions/PlaybookWorkflow'
    consumes:
      - multipart/form-data
    produces:
      - application/json
    responses:
      200:
        description: Success
/playbooks/{playbook_name}/workflows/{workflow_name}/execute:
  post:
    tags:
      - Workflows
    summary: Execute a workflow
    description: ''
    operationId: server.endpoints.playbooks.execute_workflow
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - name: workflow_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
    produces:
      - application/json
    responses:
      200:
        description: Success
/playbooks/{playbook_name}/workflows/{workflow_name}/pause:
  post:
    tags:
      - Workflows
    summary: Pause a workflow
    description: ''
    operationId: server.endpoints.playbooks.pause_workflow
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - name: workflow_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
    produces:
      - application/json
    responses:
      200:
        description: Success
        schema:
          description: The UUID necessary to resume the workflow (for security purposes)
          type: object
          properties:
            uuid:
              type: string

/playbooks/{playbook_name}/workflows/{workflow_name}/resume:
  post:
    tags:
      - Workflows
    summary: Resume a workflow
    description: ''
    operationId: server.endpoints.playbooks.resume_workflow
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - name: workflow_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - in: body
        name: body
        description: The UUID for this transaction, returned from pause_workflow
        required: true
        schema:
          $ref: '#/definitions/ResumeWorkflow'
    consumes:
      - multipart/form-data
    produces:
      - application/json
    responses:
      200:
        description: Success
/playbooks/{playbook_name}/workflows/{workflow_name}/save:
  post:
    tags:
      - Workflows
    summary: Save a workflow
    description: ''
    operationId: server.endpoints.playbooks.save_workflow
    parameters:
      - name: playbook_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
      - name: workflow_name
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        type: string
    produces:
      - application/json
    consumes:
      - application/json
    responses:
      200:
        description: Success